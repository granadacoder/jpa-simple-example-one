buildscript {

    ext {
        spring_plugin_version = '2.7.0'
        springBootVersion = '2.7.0'


        slf4jVersion = "1.7.36"
        logbackClassicVersion = '1.2.11'


        javaxInjectVersion = "1"
        javaxPersistenceApiVersion = "2.2"
        junitVersion = "4.13.2"
        mockitoVersion = "3.3.0"
        jacksonAnnotationsVersion = "2.11.0"
        modelMapperVersion = "3.1.0"
        commonsLangVersion = '3.12.0'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_plugin_version")
    }
}

plugins {
    id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

springBoot {
    mainClass = 'com.mycompany.organizationdemo.businessservices.MyRestServiceStartupApplicationEntry'
}


version '1.0-SNAPSHOT'

subprojects {

    repositories {
        mavenCentral()
    }

}

allprojects {

    /* custom task to show dependencies.  run "gradle printAllDependencies" from commandline.  see https://stackoverflow.com/questions/44266687/how-to-print-out-all-dependencies-in-a-gradle-multi-project-build/54436979#54436979 */
    task printAllDependencies(type: DependencyReportTask) {}

}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: "$junitVersion"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
}


/*
#vsnote  this file contains several things.
the xyzVersion values allow a single place to define dependency versions.

the "dependencies" here will apply to EVERY sub-module.  so you only really want a very common list here.
(definitely NOT a superset of dependencies.)

(even something like SLF4J would not be a part of the POJO (POCO) "Domain" library.

*/